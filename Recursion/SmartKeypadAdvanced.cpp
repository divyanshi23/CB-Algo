/*Given a long vector of strings, print the strings that contain the strings generated by numeric string str.

string searchIn [] = {
            "prateek", "sneha", "deepak", "arnav", "shikha", "palak",
            "utkarsh", "divyam", "vidhi", "sparsh", "akku"
    };
For example, if the input is 26 and the string is coding, then output should be coding since 26 can produce co which is 
contained in coding.

Input Format
A numeric string str

Constraints
len(str) < 10
No of strings in the vector < 10

Output Format
Each matched string from the given vector.

Sample Input
34
Sample Output
vidhi
divyam
sneha
Explanation
34 will result into combinations :

*dg         *eg         *fg
*dh            *eh         *fh
*di            *ei         *fi
Corresponding strings are output.

vidhi contains dh
divyam contains di
sneha contains eh*/

#include <iostream>
#include <vector>
#include <string>
using namespace std;

string table[] = { " ", ".+@$", "abc", "def", "ghi", "jkl" , "mno", "pqrs" , "tuv", "wxyz" };

string searchIn [] = {
            "prateek", "sneha", "deepak", "arnav", "shikha", "palak",
            "utkarsh", "divyam", "vidhi", "sparsh", "akku"
    };

vector<string> keypad(string s)
{
	if(s.size()==0)
	{
		vector<string> v;
		v.push_back("");
		return v;
	}
	std::vector<string> smallAns=keypad(s.substr(1));
	int n=smallAns.size();
	vector<string> ans;
	for(int i=0;i<table[s[0]-'0'].size();i++)
	{
		for(auto j:smallAns)
		{
			ans.push_back(table[s[0]-'0'][i]+j);
		}
	}
	return ans;
}

int main(int argc, char const *argv[])
{
	string s;
	cin>>s;
	int* visited=new int[10]();
	vector<string> v=keypad(s);
	for(auto i:v)
	{
		for(int j=0;j<11;j++)
		{
			if(!visited[j] && searchIn[j].find(i)<searchIn[j].size())
			{
				cout<<searchIn[j]<<endl;
				visited[j]=1;
			}
		}
	}
	return 0;
}